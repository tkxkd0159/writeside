name: Build documentation

on:
  push:
    tags:
      - v[0-9]+.[0-9]+
  # Specify to run a workflow manually from the Actions tab on GitHub
  workflow_dispatch:

permissions:
  id-token: write
  pages: write

env:
  ARTIFACT_V1: webHelpJS2-all.zip
  ARTIFACT_V2: webHelpJS2-all.zip

jobs:
  build:
    strategy:
      matrix:
        version: [v1]
        # Name of module and id separated by a slash
        instance: [mydocs/js]
        # Replace XX with the ID of the instance in capital letters
        artifact: [webHelpJS2-all.zip]
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Writerside docs using Docker
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ matrix.instance }}
          artifact: ${{ matrix.artifact }}
        
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs${{ matrix.version }}
          path: |
            artifacts/${{ matrix.artifact }}
            artifacts/report.json
          retention-days: 7

    # Add the job below and artifacts/report.json on Upload documentation step above if you want to fail the build when documentation contains errors
  test:
    needs: build
    strategy:
      matrix:
        version: [v1]
        instance: [mydocs/js]
        artifact: [webHelpJS2-all.zip]
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v1
        with:
          name: docs${{ matrix.version }}
          path: artifacts
      - name: Test documentation
        uses: JetBrains/writerside-checker-action@v1
        with:
          instance: ${{ matrix.instance }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download v1 docs
        uses: actions/download-artifact@v3
        with:
          name: docsv1

#      - name: Download v2 docs
#        uses: actions/download-artifact@v3
#        with:
#          name: docsv2

      - name: Generate documents destination
        run: mkdir -p dist/v1 && mkdir dist/v2

      - name: Unzip v1 docs
        uses: montudor/action-zip@v1
        with:
          args: unzip -qq ${{ env.ARTIFACT_V1 }} -d dist/v1

#      - name: Unzip v2 docs
#        uses: montudor/action-zip@v1
#        with:
#          args: unzip -qq ${{ env.ARTIFACT_V2 }} -d dist/v2

      - name: Setup Pages
        uses: actions/configure-pages@v3
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'dist'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
